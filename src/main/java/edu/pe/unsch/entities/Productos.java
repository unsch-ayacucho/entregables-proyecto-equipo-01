package edu.pe.unsch.entities;
// Generated 02/06/2019 02:58:27 AM by Hibernate Tools 5.1.10.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Productos generated by hbm2java
 */
@Entity
@Table(name = "productos", catalog = "db_ecommerce")
public class Productos implements java.io.Serializable {

	private Integer id;
	private Categoria categoria;
	private Marca marca;
	private String nombre;
	private BigDecimal precio;
	private BigDecimal precioNuevo;
	private Integer stock;
	private Boolean nuevo;
	private Boolean recomendado;
	private String descripcion;
	private Boolean visible;
	private String imagen;
	private Set<Revision> revisions = new HashSet<Revision>(0);

	public Productos() {
	}

	public Productos(String nombre, BigDecimal precio) {
		this.nombre = nombre;
		this.precio = precio;
	}

	public Productos(Categoria categoria, Marca marca, String nombre, BigDecimal precio, BigDecimal precioNuevo,
			Integer stock, Boolean nuevo, Boolean recomendado, String descripcion, Boolean visible, String imagen,
			Set<Revision> revisions) {
		this.categoria = categoria;
		this.marca = marca;
		this.nombre = nombre;
		this.precio = precio;
		this.precioNuevo = precioNuevo;
		this.stock = stock;
		this.nuevo = nuevo;
		this.recomendado = recomendado;
		this.descripcion = descripcion;
		this.visible = visible;
		this.imagen = imagen;
		this.revisions = revisions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categoria_id")
	public Categoria getCategoria() {
		return this.categoria;
	}

	public void setCategoria(Categoria categoria) {
		this.categoria = categoria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "marca_id")
	public Marca getMarca() {
		return this.marca;
	}

	public void setMarca(Marca marca) {
		this.marca = marca;
	}

	@Column(name = "nombre", nullable = false, length = 60)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "precio", nullable = false, precision = 7)
	public BigDecimal getPrecio() {
		return this.precio;
	}

	public void setPrecio(BigDecimal precio) {
		this.precio = precio;
	}

	@Column(name = "precio_nuevo", precision = 7)
	public BigDecimal getPrecioNuevo() {
		return this.precioNuevo;
	}

	public void setPrecioNuevo(BigDecimal precioNuevo) {
		this.precioNuevo = precioNuevo;
	}

	@Column(name = "stock")
	public Integer getStock() {
		return this.stock;
	}

	public void setStock(Integer stock) {
		this.stock = stock;
	}

	@Column(name = "nuevo")
	public Boolean getNuevo() {
		return this.nuevo;
	}

	public void setNuevo(Boolean nuevo) {
		this.nuevo = nuevo;
	}

	@Column(name = "recomendado")
	public Boolean getRecomendado() {
		return this.recomendado;
	}

	public void setRecomendado(Boolean recomendado) {
		this.recomendado = recomendado;
	}

	@Column(name = "descripcion", length = 65535)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "visible")
	public Boolean getVisible() {
		return this.visible;
	}

	public void setVisible(Boolean visible) {
		this.visible = visible;
	}

	@Column(name = "imagen", length = 100)
	public String getImagen() {
		return this.imagen;
	}

	public void setImagen(String imagen) {
		this.imagen = imagen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productos")
	public Set<Revision> getRevisions() {
		return this.revisions;
	}

	public void setRevisions(Set<Revision> revisions) {
		this.revisions = revisions;
	}

}
